{"version":3,"sources":["ec2.js","network.js","ec2Helper.js","components/SecurityGroups.js","components/Service.js","components/S3Bucket.js","components/IAMExists.js","components/IPSubmit.js","App.js","useLocalStorage.js","reportWebVitals.js","index.js"],"names":["ec2","ip","forwardIp","errorObject","error","status","response","code","message","502","url","a","method","path","console","log","axios","timeout","data","makeRequest","makeLocalRequest","network","service","get","getElasticIp","getDetails","getSecurityGroups","getThisRouteTable","getVpc","getSubnets","getService","getEndpoints","testBucket","getVolumes","details","result","key","useStyles","makeStyles","theme","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","expand","transition","transitions","create","duration","shortest","expandOpen","sgPaper","padding","securityGroups","groups","classes","Paper","elevation","map","permissions","gi","p","pi","Card","variant","className","Typography","fromPort","cidr","parsePermission","permission","FromPort","toPort","ToPort","IpRanges","CidrIp","parseSecurityGroup","group","IpPermissions","SecurityGroups","expectedGroups","useState","expanded","setExpanded","components","push","flattenedPermissions","flat","expected","idx","find","CardContent","color","gutterBottom","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","unmountOnExit","paragraph","Service","serviceName","ActiveState","SubState","S3Bucket","bucketName","date","ElasticIp","InstanceProfileArn","spacing","width","App","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","setDetails","pageState","setPageState","_details","iaminfo","s3","general","submit","ec2Helper","submitToken","post","host","location","alert","Button","CircularProgress","env","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25f2aac0.chunk.js","sourcesContent":["import network from './network'\n\nexport default function ec2(ip, forwardIp) {\n  const { makeRequest, makeLocalRequest } = network(ip, forwardIp)\n\n  async function get(url) {\n    const data = await makeLocalRequest(url)\n    return data\n  }\n  \n  async function getElasticIp() {\n    const data = await makeRequest(`/addresses`)\n    return data\n  }\n  \n  async function getDetails() {\n    const data = await makeRequest(`/details`)\n    return data\n  }\n  \n  async function getSecurityGroups() {\n    const data = await makeRequest(`/securityGroups`)\n    return data\n  }\n  \n  async function getThisRouteTable() {\n    const data = await makeRequest(`/thisRouteTable`)\n    return data\n  }\n\n  async function getVpc() {\n    const data = await makeRequest(`/vpcs`)\n    return data\n  }\n\n  async function getSubnets() {\n    const data = await makeRequest(`/subnets`)\n    return data\n  }\n\n  async function getService(service) {\n    const data = await makeRequest(`/service/${service}`)\n    return data\n  }\n\n  async function getEndpoints() {\n    const data = await makeRequest(`/endpoints`)\n    return data\n  }\n\n  async function getVolumes() {\n    const data = await makeRequest(`/volumes`)\n    return data\n  }\n\n  async function testBucket() {\n    const data = await makeRequest(`/testBucket`)\n    return data\n  }\n\n  return {\n    get,\n    getElasticIp,\n    getDetails,\n    getSecurityGroups,\n    getThisRouteTable,\n    getVpc,\n    getSubnets,\n    getService,\n    getEndpoints,\n    testBucket,\n    getVolumes\n  }\n}\n","import axios from 'axios'\n\nexport default function network(ip, forwardIp) {\n\n  function errorObject(error) {\n    const status = (error.response && error.response.status) || error.code\n  \n    const messages = {\n      502: \"Can reach nginx, but not the server. It's probably not currently running on port 8080\",\n      \"ECONNABORTED\": \"Couldn't connect to the instance's nginx server\"\n    }\n  \n    return {\n      status,\n      message: messages[status]\n    }\n  }\n\n  async function makeLocalRequest(url, method=\"get\") {\n    const path = `${url}` + (!!forwardIp ? `?forward=${forwardIp}` : \"\")\n    console.log(path)\n    try {\n      const data = await axios[method](path, {timeout: 10000})\n      return data.data\n    } catch (error) {\n      // debugger\n      return {error: {...error, ...errorObject(error)}}\n    }\n  }\n  \n  async function makeRequest(url, method=\"get\") {\n    const path = `http://${ip}${url}` + (!!forwardIp ? `?forward=${forwardIp}` : \"\")\n    console.log(path)\n    try {\n      const data = await axios[method](path, {timeout: 10000})\n      return data.data\n    } catch (error) {\n      // debugger\n      return {error: {...error, ...errorObject(error)}}\n    }\n  }\n\n  return { makeRequest, makeLocalRequest }\n\n}  \n","import ec2 from './ec2'\n\nexport async function getDetails(details) {\n  const result = {}\n  for (const key in details) {\n    result[key] = await ec2().get(details[key])\n  }\n  return result\n  // const vpc = await ec2(ip).getVpc()\n  // const subnets = await ec2(ip).getSubnets()\n  // const endpoints = await ec2(ip).getEndpoints()\n  // const details = await ec2(ip).getDetails()\n  // const elasticIp = await ec2(ip).getElasticIp()\n  // const securityGroups = await ec2(ip).getSecurityGroups()\n  // const routeTable = await ec2(ip).getThisRouteTable()\n  // const service = await ec2(ip).getService(serviceName)\n  // const s3 = await ec2(ip).testBucket()\n  // const volumes = await ec2(ip).getVolumes()\n\n  // const _allSubnets = subnetCIDRs.map((cidr, idx) => subnets.Subnets && !!subnets.Subnets.find(sub => sub.CidrBlock === cidr))\n  // const allSubnets = !(_allSubnets.includes(false))\n  // console.log(_allSubnets, allSubnets, \"allSubnets\")\n\n  // return {\n  //   vpc,\n  //   subnets,\n  //   endpoints,\n  //   details,\n  //   elasticIp,\n  //   securityGroups,\n  //   routeTable,\n  //   service,\n  //   s3,\n  //   publicIp: ip,\n  //   allSubnets,\n  //   _allSubnets\n  // }\n}","import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { Card, CardContent, CardActions, IconButton, Typography, Collapse, Paper } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nconst useStyles = makeStyles((theme) => ({  \n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    // marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  sgPaper: {\n    padding: 10\n  }\n}))\n\nfunction securityGroups(groups, classes) {\n  return (\n    <Paper elevation={3}>\n    {groups.map((permissions, gi) => (\n      \n      permissions.map((p, pi) => (\n        <Card variant=\"outlined\" key={gi+\"\"+pi} className={classes.sgPaper}>\n        <Typography>Group {gi}, Permission {pi}:</Typography>\n        <ul>\n        <li>From Port {p.fromPort}</li>\n        <li>To Port {p.fromPort}</li>\n        <li>Cidr {p.cidr}</li>\n        </ul>\n        </Card>\n      ))\n      \n    ))}\n    </Paper>\n  )\n}\n\nfunction parsePermission(permission) {\n  return {\n    fromPort: permission.FromPort,\n    toPort: permission.ToPort,\n    cidr: permission.IpRanges[0].CidrIp\n  }\n}\n\nfunction parseSecurityGroup(group) {\n  const permissions = group.IpPermissions.map(parsePermission)\n  return permissions\n}\n\n\nexport default function SecurityGroups({data, expectedGroups}) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  if (!data) {\n    return (<p></p>)\n  }\n  let components = []\n\n\n  if (data.error) {\n    components.push(<Typography>❌ {data.error.message}</Typography>)\n  }\n  \n  const groups = data.SecurityGroups && data.SecurityGroups.map(parseSecurityGroup)\n  const flattenedPermissions = groups ? groups.flat() : []\n  components = expectedGroups.map((expected, idx) => (\n    <Typography key={`group${idx}`}>{!\n      (flattenedPermissions.find(group => \n        group.fromPort === expected.fromPort &&\n        group.toPort === expected.toPort &&\n        group.cidr === expected.cidr\n      )) ? \"❌\" : \"✅\"} Security group from {expected.cidr} on ports {expected.fromPort} to {expected.toPort}</Typography>\n  ))\n   \n\n  // components.push(<Typography key=\"1\">{!port80 ? \"❌\" : \"✅\"} Add a security group with access to port 80</Typography>)\n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        Security Groups\n        </Typography>\n        {components}\n      </CardContent>\n      <CardActions disableSpacing>\n        <Typography>Show Groups</Typography>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Security Groups:</Typography>\n            {securityGroups(groups || [], classes)}\n          </CardContent>\n      </Collapse>\n    </Card>\n  )\n}","import { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, CardActions, IconButton, Typography, Collapse, Paper } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({  \n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}))\n\n\n\nexport default function Service({data, serviceName}) {\n  const classes = useStyles()\n  \n  if (!data) {\n    return (<p></p>)\n  }\n  let components = []\n\n\n  if (data.error) {\n    components.push(<Typography>❌ {data.error.message}</Typography>)\n  }\n\n  console.log(data)\n\n  const { ActiveState, SubState } = data\n  \n  components.push(<Typography key=\"service-1\">{(ActiveState !== \"active\") ? \"❌\" : \"✅\"} {serviceName} is a service in an an active state: <em>{ActiveState}</em></Typography>)\n  components.push(<Typography key=\"service-2\">{(SubState !== \"running\") ? \"❌\" : \"✅\"} {serviceName} is a service in an a running substate: <em>{SubState}</em></Typography>)\n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        Service\n        </Typography>\n        {components}\n      </CardContent>\n    </Card>\n  )\n}","import { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, CardActions, IconButton, Typography, Collapse, Paper } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({  \n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}))\n\n\n\nexport default function S3Bucket({data, bucketName}) {\n  const classes = useStyles()\n  \n  if (!data) {\n    return (<p></p>)\n  }\n  let components = []\n\n\n  if (data.error) {\n    components.push(<Typography>❌ {data.error.message}</Typography>)\n  }\n\n  console.log(\"S3\", data)\n\n  const { date } = data\n  \n  components.push(<Typography key=\"bucket-1\">{(!date) ? \"❌\" : \"✅\"} File uploaded and downloaded to {bucketName} at {date}</Typography>)\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        S3\n        </Typography>\n        {components}\n      </CardContent>\n    </Card>\n  )\n}","import { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, CardActions, IconButton, Typography, Collapse, Paper } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({  \n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}))\n\n\n\nexport default function ElasticIp({data}) {\n  const classes = useStyles()\n  \n  if (!data) {\n    return (<p></p>)\n  }\n  let components = []\n\n\n  if (data.error) {\n    components.push(<Typography>❌ {data.error.message}</Typography>)\n  }\n  \n  components.push(<Typography key=\"1\">{!data.InstanceProfileArn ? \"❌\" : \"✅\"}An IAM role has been attached to this instance {data.InstanceProfileArn}</Typography>)\n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        IAM\n        </Typography>\n        {components}\n      </CardContent>\n    </Card>\n  )\n}","import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport { TextField, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nexport default function ElasticIp(props) {\n  const classes = useStyles()\n\n  const [value, setValue] = useState(props.ipAddress)\n\n  const onSubmit = event => {\n    event.preventDefault()\n    props.onSubmit({value})\n  }\n\n  \n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n      <TextField value={value} onChange={e => setValue(e.target.value)} id=\"standard-basic\" label=\"IP Address\" />\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n    </form>\n  )\n}","import './App.css'\nimport { useEffect, useState } from 'react'\nimport * as ec2Helper from './ec2Helper'\nimport axios from 'axios'\n\nimport useLocalStorage from './useLocalStorage'\n\nimport SecurityGroups from './components/SecurityGroups'\nimport Service from './components/Service'\nimport S3Bucket from './components/S3Bucket'\nimport IAMExists from './components/IAMExists'\n\nimport IPSubmit from './components/IPSubmit'\n\nimport { CircularProgress, Button } from '@material-ui/core'\n\nfunction App() {\n\n  const [publicIp, setPublicIp] = useLocalStorage('publicIp', \"\");\n  const [details, setDetails] = useState({})\n  const [pageState, setPageState] = useState(\"unsearched\")\n\n  const serviceName = \"nodeserver.service\"\n  const subnetCIDRs = [\"10.0.1.0/24\", \"10.0.2.0/24\", \"10.0.3.0/24\", \"10.0.4.0/24\"]\n  const instanceIps = [\"10.0.1.10\", \"10.0.2.10\", \"10.0.3.10\"]\n  const vpcCIDR = \"10.0.0.0/16\"\n\n  const _details = {\n    service: \"/api/status/service\",\n    securityGroups: \"/api/status/securityGroups\",\n    iaminfo: \"/api/status/iaminfo\",\n    s3: \"/api/status/s3\",\n    general: \"/api/status\"\n  }\n  \n  \n  const submit = async () => {\n    setPageState(\"loading\")\n    const details = await ec2Helper.getDetails(_details)\n    console.log(details)\n    setDetails(details)\n    setPageState(\"loaded\")\n  }\n\n  const submitToken = async () => {\n    setPageState(\"loading\")\n    try {\n      const data = await axios.post(`http://52.60.55.210`, {\n        host: window.location.host\n      })\n      setPageState(\"loaded\")\n      if (data.error) {\n        alert(\"Error\")\n        return\n      }\n    } catch (error) {\n      setPageState(\"loaded\")\n      console.log(error)\n      alert(\"Error\")\n      return\n    }\n    \n    alert(\"🤗\")\n  }\n\n  const sgs = [\n    {fromPort: 4040, toPort: 4040, cidr: \"0.0.0.0/0\"},\n    {fromPort: 22, toPort: 22, cidr: \"0.0.0.0/0\"}\n  ]\n\n  return (\n    <div className=\"App\">\n\n      {/* {pageState !== \"loading\" && <IPSubmit ipAddress={publicIp} onSubmit={ipSubmit}></IPSubmit> } */}\n      {pageState !== \"loading\" && <Button variant=\"contained\" color=\"primary\" onClick={submit}>Submit</Button>\n }\n\n      {pageState === \"loading\" && <><h1>Loading...</h1> <CircularProgress /></>}\n\n      {pageState === \"loaded\" && \n      <>\n      <h2>Main Server:</h2>\n      {/* <Details data={details} privateIp={privateIp}></Details>\n      <ElasticIp data={elasticIp}></ElasticIp>\n      <RouteTable routeTable={routeTable}></RouteTable> */}\n      <IAMExists data={details.iaminfo}></IAMExists>\n      <SecurityGroups data={details.securityGroups} expectedGroups={sgs}></SecurityGroups>\n      <Service data={details.service} serviceName={serviceName}></Service>\n      <S3Bucket data={details.s3} bucketName={details.general.env.bucketName}></S3Bucket>\n \n\n      <br></br>\n\n      <p>This assignment is pass or fail. You need all green checkmarks to pass.</p>\n      <p>Only click this button if all the checkmarks are green.</p>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => submitToken()}>Submit Token</Button>\n      </>\n      }\n\n    </div>\n  )\n}\n\nexport default App\n","import { useState } from 'react'\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}