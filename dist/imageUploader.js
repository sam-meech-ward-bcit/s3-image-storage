"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _multer = _interopRequireDefault(require("multer"));

var _path = _interopRequireDefault(require("path"));

var _fs = _interopRequireDefault(require("fs"));

var _imageSize = _interopRequireDefault(require("image-size"));

var _express = _interopRequireDefault(require("express"));

var uploadPostsRouter = _express["default"].Router();

var publicPath = _path["default"].join(__dirname, '../public');

var uploadsDir = 'uploads';
var postsDir = 'posts';

var postsPath = _path["default"].join(uploadsDir, postsDir);

exports.postsPath = postsPath;

var imageSizer = function imageSizer(req, res, next) {
  if (req.file) {
    req.image = {};
    req.image.path = _path["default"].join(postsPath, req.file.filename);
    req.image.size = (0, _imageSize["default"])(_path["default"].join(publicPath, req.image.path));
  }

  next();
};

var fullPostsDir = _path["default"].join(publicPath, uploadsDir, postsDir);

var uploadPostsMutler = (0, _multer["default"])({
  dest: fullPostsDir
}).array('images');
uploadPostsRouter.use(uploadPostsMutler);
uploadPostsRouter.use(imageSizer);

function allPosts(cb) {
  _fs["default"].readdir(fullPostsDir, cb);
}

var _default = {
  uploadPosts: uploadPostsRouter,
  fullPostsDir: fullPostsDir,
  allPosts: allPosts
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BMDEwMzY4OTIvQkNJVC9hc3NpZ25tZW50X2FwcHMvZWMyX3MzX2ltYWdlX3VwbG9hZC9leHByZXNzLWJhY2stZW5kL3NyYy9pbWFnZVVwbG9hZGVyLmpzIl0sIm5hbWVzIjpbInVwbG9hZFBvc3RzUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInB1YmxpY1BhdGgiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVwbG9hZHNEaXIiLCJwb3N0c0RpciIsInBvc3RzUGF0aCIsImV4cG9ydHMiLCJpbWFnZVNpemVyIiwicmVxIiwicmVzIiwibmV4dCIsImZpbGUiLCJpbWFnZSIsImZpbGVuYW1lIiwic2l6ZSIsImZ1bGxQb3N0c0RpciIsInVwbG9hZFBvc3RzTXV0bGVyIiwiZGVzdCIsImFycmF5IiwidXNlIiwiYWxsUG9zdHMiLCJjYiIsImZzIiwicmVhZGRpciIsInVwbG9hZFBvc3RzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFFQTs7QUFDQSxJQUFNQSxpQkFBaUIsR0FBR0Msb0JBQVFDLE1BQVIsRUFBMUI7O0FBRUEsSUFBTUMsVUFBVSxHQUFHQyxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLENBQW5COztBQUNBLElBQU1DLFVBQVUsR0FBRyxTQUFuQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxPQUFqQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdMLGlCQUFLQyxJQUFMLENBQVVFLFVBQVYsRUFBc0JDLFFBQXRCLENBQWxCOztBQUNBRSxPQUFPLENBQUNELFNBQVIsR0FBb0JBLFNBQXBCOztBQUVBLElBQU1FLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3JDLE1BQUlGLEdBQUcsQ0FBQ0csSUFBUixFQUFjO0FBQ1pILElBQUFBLEdBQUcsQ0FBQ0ksS0FBSixHQUFZLEVBQVo7QUFDQUosSUFBQUEsR0FBRyxDQUFDSSxLQUFKLENBQVVaLElBQVYsR0FBaUJBLGlCQUFLQyxJQUFMLENBQVVJLFNBQVYsRUFBcUJHLEdBQUcsQ0FBQ0csSUFBSixDQUFTRSxRQUE5QixDQUFqQjtBQUNBTCxJQUFBQSxHQUFHLENBQUNJLEtBQUosQ0FBVUUsSUFBVixHQUFpQiwyQkFBT2QsaUJBQUtDLElBQUwsQ0FBVUYsVUFBVixFQUFzQlMsR0FBRyxDQUFDSSxLQUFKLENBQVVaLElBQWhDLENBQVAsQ0FBakI7QUFDRDs7QUFDRFUsRUFBQUEsSUFBSTtBQUNMLENBUEQ7O0FBU0EsSUFBTUssWUFBWSxHQUFHZixpQkFBS0MsSUFBTCxDQUFVRixVQUFWLEVBQXNCSSxVQUF0QixFQUFrQ0MsUUFBbEMsQ0FBckI7O0FBQ0EsSUFBTVksaUJBQWlCLEdBQUcsd0JBQU87QUFBRUMsRUFBQUEsSUFBSSxFQUFFRjtBQUFSLENBQVAsRUFBK0JHLEtBQS9CLENBQXFDLFFBQXJDLENBQTFCO0FBQ0F0QixpQkFBaUIsQ0FBQ3VCLEdBQWxCLENBQXNCSCxpQkFBdEI7QUFDQXBCLGlCQUFpQixDQUFDdUIsR0FBbEIsQ0FBc0JaLFVBQXRCOztBQUVBLFNBQVNhLFFBQVQsQ0FBa0JDLEVBQWxCLEVBQXNCO0FBQ3BCQyxpQkFBR0MsT0FBSCxDQUFXUixZQUFYLEVBQXlCTSxFQUF6QjtBQUNEOztlQUVjO0FBQ2JHLEVBQUFBLFdBQVcsRUFBRTVCLGlCQURBO0FBRWJtQixFQUFBQSxZQUFZLEVBQVpBLFlBRmE7QUFHYkssRUFBQUEsUUFBUSxFQUFSQTtBQUhhLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXVsdGVyICBmcm9tICdtdWx0ZXInXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuXG5pbXBvcnQgc2l6ZU9mIGZyb20gJ2ltYWdlLXNpemUnXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5jb25zdCB1cGxvYWRQb3N0c1JvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcblxuY29uc3QgcHVibGljUGF0aCA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnKVxuY29uc3QgdXBsb2Fkc0RpciA9ICd1cGxvYWRzJ1xuY29uc3QgcG9zdHNEaXIgPSAncG9zdHMnXG5jb25zdCBwb3N0c1BhdGggPSBwYXRoLmpvaW4odXBsb2Fkc0RpciwgcG9zdHNEaXIpXG5leHBvcnRzLnBvc3RzUGF0aCA9IHBvc3RzUGF0aFxuXG5jb25zdCBpbWFnZVNpemVyID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGlmIChyZXEuZmlsZSkge1xuICAgIHJlcS5pbWFnZSA9IHt9XG4gICAgcmVxLmltYWdlLnBhdGggPSBwYXRoLmpvaW4ocG9zdHNQYXRoLCByZXEuZmlsZS5maWxlbmFtZSlcbiAgICByZXEuaW1hZ2Uuc2l6ZSA9IHNpemVPZihwYXRoLmpvaW4ocHVibGljUGF0aCAscmVxLmltYWdlLnBhdGgpKVxuICB9XG4gIG5leHQoKVxufVxuXG5jb25zdCBmdWxsUG9zdHNEaXIgPSBwYXRoLmpvaW4ocHVibGljUGF0aCwgdXBsb2Fkc0RpciwgcG9zdHNEaXIpXG5jb25zdCB1cGxvYWRQb3N0c011dGxlciA9IG11bHRlcih7IGRlc3Q6IGZ1bGxQb3N0c0RpciB9KS5hcnJheSgnaW1hZ2VzJylcbnVwbG9hZFBvc3RzUm91dGVyLnVzZSh1cGxvYWRQb3N0c011dGxlcilcbnVwbG9hZFBvc3RzUm91dGVyLnVzZShpbWFnZVNpemVyKVxuXG5mdW5jdGlvbiBhbGxQb3N0cyhjYikge1xuICBmcy5yZWFkZGlyKGZ1bGxQb3N0c0RpciwgY2IpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdXBsb2FkUG9zdHM6IHVwbG9hZFBvc3RzUm91dGVyLFxuICBmdWxsUG9zdHNEaXIsXG4gIGFsbFBvc3RzXG59Il0sImZpbGUiOiJpbWFnZVVwbG9hZGVyLmpzIn0=
